package org.eclipse.scout.contacts.client.common;

import org.eclipse.scout.contacts.client.common.PictureUrlForm.MainBox.UrlBox.InfoField;
import org.eclipse.scout.contacts.client.common.PictureUrlForm.MainBox.UrlBox.UrlField;
import org.eclipse.scout.contacts.shared.Icons;
import org.eclipse.scout.rt.client.ui.form.AbstractForm;
import org.eclipse.scout.rt.client.ui.form.AbstractFormHandler;
import org.eclipse.scout.rt.client.ui.form.fields.button.AbstractCancelButton;
import org.eclipse.scout.rt.client.ui.form.fields.button.AbstractOkButton;
import org.eclipse.scout.rt.client.ui.form.fields.groupbox.AbstractGroupBox;
import org.eclipse.scout.rt.client.ui.form.fields.htmlfield.AbstractHtmlField;
import org.eclipse.scout.rt.client.ui.form.fields.stringfield.AbstractStringField;
import org.eclipse.scout.rt.platform.Order;
import org.eclipse.scout.rt.platform.classid.ClassId;
import org.eclipse.scout.rt.platform.html.HTML;
import org.eclipse.scout.rt.platform.text.TEXTS;

public class PictureUrlForm extends AbstractForm {
	@Override
	protected String getConfiguredTitle() {
		return TEXTS.get("PictureUrl");
	}

	public void startModify() {
		startInternal(new ModifyHandler());
	}

	public UrlField getUrlField() {
		return getFieldByClass(UrlField.class);
	}

	public InfoField getInfoField() {
		return getFieldByClass(InfoField.class);
	}

	@Order(10)
	public class MainBox extends AbstractGroupBox {
		@Order(10)
		public class UrlBox extends AbstractGroupBox {
			@Order(10)
			public class UrlField extends AbstractStringField {
				@Override
				protected boolean getConfiguredLabelVisible() {
					return false;
				}

				@Override
				protected boolean getConfiguredStatusVisible() {
					return false;
				}

				@Override
				protected int getConfiguredGridW() {
					return 2;
				}
			}

			@Order(20)
			public class InfoField extends AbstractHtmlField {
				@Override
				protected boolean getConfiguredLabelVisible() {
					return false;
				}

				@Override
				protected boolean getConfiguredStatusVisible() {
					return false;
				}

				@Override
				protected int getConfiguredGridW() {
					return 2;
				}

				@Override
				protected boolean getConfiguredGridUseUiHeight() {
					return true;
				}

				@Override
				protected void execInitField() {
					setValue(HTML.fragment(HTML.icon(Icons.Info), HTML.bold(" " + TEXTS.get("PleaseNote") + ": "),
							TEXTS.get("SecurityUrlRestrictedMsg")).toHtml());
				}
			}
		}

		@Order(20)
		public class OkButton extends AbstractOkButton {
		}

		@Order(30)
		public class CancelButton extends AbstractCancelButton {
		}
	}

	public class ModifyHandler extends AbstractFormHandler {
	}
}